* detalles de la clase
** gildardo antonio orrego villa
** matematicas discretas
** apenas exista un problema de comprencion pida asesorias
** asesorias: viernes 4 pm
** monitor edinson mosquera y otro
** monitor es ayo
* valor de examenes y contenidos
** 1   logica de propociones y logica predicados
*** trabajo de propociones y predicados
*** foros de pr (como se va a trabajar con foros:)?
*** repo de github:https://github.com/OrregoGildardo/MatematicasDiscretas
** vamos atrabajar criptografias
** el fuerte esta en la unidad 1
** se ve conjunto con programacion
* consulta como se clasifican los operadores logicos
* notas
** declarativa
***  explica una cosa que originalmente no estaba clara.
** descriptiva
*** 
** interrogativa
*** pregunta
** tautlogia
*** si algo puede ser posible lo puede ser
* 5/08/2020
** conyuccion y disyuncion y un poco mas
*** la conyuccion(y) es verdadero cuando todas son verderas y es falso cuando alguna es falsa
*** la disyuncion(o) es verdadero cuando alguna es verdad
*** uds no puede llegar a una verdad si no es verdad
*** la implicacion (->) de falso puedo llegar a cualquier cosa
*** en la XOR o discluncion esclusiva es falsa cuando hay impar de falsas y verdad si es par las falsas
*** en el bicondicional si hay par de falsos es falso  y si hay impar falsas es verda
** jerarquia de operaciones
*** 0 parentesis
*** 1 negacion
*** 2 conyuccion
*** 3 disyunccion
** siempre que se habla de leyes de habla de equivalencias
*** https://editorialpatria.com.mx/mobile/pdffiles/9786074387384.pdf 
* clase 12/08/2020
** si hay menos verdades se trabajan con la forma normal diyuntiva
** si hay menos falsedades se trabajan con la forma normal conyuctiva
* asesoria 14/08/2020
** si la funcion propocional dada es muy compleja
** Leyes del álgebra de proposiciones
*** idempotencia es que (y /o) si pasan por el mismo valor 2 veces va ser el mismo valor al resultado ¿solo con 2 o puede ser con mas (idem significaa lo mismo) si tienes la misma ley 2 veces respodne con ella 1 vez
**** p v p <=> p
**** p ^ p <=> p
*** identidad ¿ como se podria explicar para entenderlo mejor si se cumple se pone la propocion ?¿como seria con mas de 2 elementos?
**** p v F <=> p
**** p ^ V <=> p
*** dominacion ¿ como se podria explicar para entenderlo mejor -> si no se cumple se pone V o F ?¿como seria con mas de 2 elementos -> no sirve? 
**** p ^ F <=> F
**** p v V <=> V
*** conmutativa la misma entrada es la misma salida pero en inverso orden ¿como seria con mas de 2 elementos-> igual? 
**** p ^ q <=> q ^ p
**** p v q <=> q v p
*** asociativa no importa el orden que se haga si tienen el mismo signo 
**** p ^ q ^ r <=> (p ^ q) ^ r <=> p ^ ( q ^ r )
**** p v q v r <=> (p v q) v r <=> p v ( q v r)
*** distributiva se aplica la porpocion fuera del parentecis  con operador contrario   
**** p ^ (q v r) <=> (p ^ q)v(p ^ r)
**** p v (q ^ r) <=> (p v q)^(p v r)
*** complementacion 
**** contardiccion
**** p ^ -q <=> F
**** tercero excluido
**** p v -q <=> V
*** involucion si la catinadad de  negaciones son pares el resultado es el que se ingreso y si la cantiad de negaciones es inpares es opuesto al valor
**** -(-p) <=> p
**** -(-(-p)) <=> -p
*** Dmorgan
**** -(p^q) <=> -p v -q
**** -(pvq) <=> -p ^ -q
* actividad de la 4 o 5 semana en equipo tema 
* 19/08/2020
** ley uniforme 
** lo que hago de un lado de la igualdad se ve que ocurrio al otro lado
*** x**2-y**2 = (x-y)(x+y)
** se habla de biequivalencia cuando el condicional es verdadero
*** cuando es verdadero el bicondicional <-> se usa <=>
*** preferiblemente usar <=>
** las reglas de equivalencia sirven para remplasar o sustituir
** reglas de inferencias¿
** modus ponendo pones - MPP
*** (p->q) ^ p=>q
** modus tollendo tollens - MTT 
*** (p->q) ^ -q => -p
** modus tollendo pones - MTP
*** (pvq)^ -p => q o (pvq) ^ -q =>q
** regla de simplificacion - RS
***  p^q => p 
***  p^q => q
*** nota no es valido con v
** regla de adicion - RA
*** p => pvq 
*** q => pvq
** regla de silogismo hipotetico - RSH
*** (p->q) ^ (q->r) => (p->r)
** regla del dilema constructivo - RDC
*** (pvq)^(p->r)^(q->s)=>(rvs)**2
** regla de simplificacion disyuctiva - RSD
*** pvp => p
** regla de union o adjuncion - RU
*** p ^ (p->q) ^ (p->r) => (q^r)
** cada premisa termina con un punto
** las premisas deben ser verderas
** no se recomienda ponerle a la premisa verbos en infinitivo
* 24/08/2020
** problema => no conoce la respuesta o solucion
** demostracion => se conoce la solucion o respuesta
** leyes
*** ley clausurativa
**** a + b es un  entero
**** a * b es un entero
*** ley modulativa
**** a + 0 = a (modulo suma 0)
**** a * 1 = a (modulo del producto es 1)
*** ley invertida
**** a+(-a) = 0 (el inverso aditivo de a es -a)
**** a*(a**(-1)) = 1 (el inverso multiplicativo de a es (a**(-1)))
*** ley cancelativa 
**** a *b / b = a, b != 0
*** ley conmutativa 
**** no importa en el orden
**** a+b = b + a
**** a*b = b * a
*** ley distributiva 
**** a * (b+c) = a*b +a*c
*** ley asociativa 
**** a+b+c = (a+b)+c = a+(b+c)
**** a*b*c = (a*b)*c = a*(b*c)
*** ley uniforme 
**** se respalda en las igualdades
**** a = b <=> a + c = b + c
**** a = b <=> a * c = b * c
*** ley monotonia
**** a < b <=> a+c < b + c
**** a > b <=> a+c > b + c
**** a < b <=> a*c < b * c , c > 0
**** a > b <=> a*c > b * c , c > 0
** un numero impar tiene potencia impar y una potencia impar tiene raiz impar
** un numero par tiene  potencia par y una potencia par tiene raiz par
* 26/08/2020 curso inexistente no aparece en la plataforma de la universidad a muchas personas matriculadas
** si el otro no trabaja no lo apuente y diga que uds no hico nada y el que lo dice tambien
* 02/09/2020
** algunos progrmas ponen cuando se divide el mismo numero pero con diferente simbolo
** 13 // 5 = 2
** -13 // 5 = -3
** el mod se saca de lo que sale del resuduo se resta su forma negativa con su forma postiva y se multiplica con el denominador como
*** 13246/79
*** =167.6708
*** 167.6708-167
*** =0.6708
*** 79*0.6708
*** =53
** consultar si python maneja numeros gigantes
* asesoria 04/09/2020
** la calculadora se nesesita calcular numeros modulares (numeros grnads)
** suma modular
** producto
** division
** invertible
** potencia
** raiz cuadrada
** cuadrados perfectos en los enteros
** bigInteger
** el usuario debe integrar
*** un positib
*** negativo
